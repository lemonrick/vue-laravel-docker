version: '3.7'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: develop-stage
    container_name: docker-frontend
    ports:
      - '8080:8080'
    volumes:
      - './frontend:/app'
    networks:
      - laravel-network
    command: /bin/sh -c "yarn && quasar dev"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: laravel-app
    container_name: docker-backend
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - './backend:/var/www/html'
    ports:
      - '8000:8000'
    networks:
      - laravel-network

  webserver:
    image: nginx:alpine
    container_name: docker-webserver
    restart: unless-stopped
    ports:
      - '8888:80'
    volumes:
      - './backend:/var/www/html'
      - './docker/nginx/default.conf:/default.conf'
    networks:
      - laravel-network

  db:
    image: mariadb:latest
    container_name: docker-db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_USER=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    volumes:
      - './docker/mariadb:/var/lib/mysql'
    ports:
      - '3306:3306'
    networks:
      - laravel-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: docker-phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=db
    ports:
      - '8181:80'
    networks:
      - laravel-network

networks:
  laravel-network:
    driver: bridge